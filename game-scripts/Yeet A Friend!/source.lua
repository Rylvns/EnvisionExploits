AutoRebirth = AutoRebirth or true;
AutoCollectStars = AutoCollectStars or true;

local ReplicatedStorage = game:GetService("ReplicatedStorage");
local Players = game:GetService("Players");
local Player = Players.LocalPlayer;

function Animate(Parent, Time, Style, Direction, Animation)
	game:GetService("TweenService"):Create(Parent, TweenInfo.new(Time, Style, Direction, 0, false, 0), Animation):Play();
end;

Player.Idled:Connect(function()
	game:GetService("VirtualUser"):CaptureController();
	game:GetService("VirtualUser"):ClickButton2(Vector2.new());
end);

ReplicatedStorage.Remote.Settings.Server.Update:FireServer("AutoThrowEnabled", true);

if AutoRebirth == true or AutoCollectStars == true then
	while wait(2) do
		if AutoRebirth == true then
			local Text = Player.PlayerGui.Main.Center.Rebirth.Progress.Percentage.Text;
			if string.split(Text, "/")[2] == string.split(Text, "/")[1] then
				ReplicatedStorage.Remote.Player.Server.AttemptRebirth:InvokeServer();
			end;
		end;
		if AutoCollectStars == true then
			for Int, Star in pairs(workspace.Stars:GetChildren()) do
				if Star:FindFirstChild("Root") ~= nil then
					coroutine.resume(coroutine.create(function()
						Animate(Star.Root, 0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, {
							CFrame = Player.Character.HumanoidRootPart.CFrame,
						});
						wait(0.17);
						ReplicatedStorage.Remote.Star.Server.Collect:FireServer(Star.Name);
					end));
				end;
			end;
		end;
	end;
end;
